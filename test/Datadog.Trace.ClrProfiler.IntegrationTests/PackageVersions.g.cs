//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by the GeneratePackageVersions tool. To safely
//     modify this file, edit PackageVersionsGeneratorDefinitions.json and
//     re-run the GeneratePackageVersions project in Visual Studio. See the
//     launchSettings.json for the project if you would like to run the tool
//     with the correct arguments outside of Visual Studio.

//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated. 
// </auto-generated>
//------------------------------------------------------------------------------

using System.Collections.Generic;
using System.Diagnostics.CodeAnalysis;

namespace Datadog.Trace.ClrProfiler.IntegrationTests
{
    [SuppressMessage("StyleCop.CSharp.LayoutRules", "SA1516:Elements must be separated by blank line", Justification = "This is an auto-generated file.")]
    public class PackageVersions
    {
#if COMPREHENSIVE_TESTS
        public static readonly bool IsComprehensive = true;
#else
        public static readonly bool IsComprehensive = false;
#endif

        public static IEnumerable<object[]> MongoDB => IsComprehensive ? PackageVersionsComprehensive.MongoDB : PackageVersionsLatestMinors.MongoDB;

        public static IEnumerable<object[]> ElasticSearch6 => IsComprehensive ? PackageVersionsComprehensive.ElasticSearch6 : PackageVersionsLatestMinors.ElasticSearch6;

        public static IEnumerable<object[]> ElasticSearch5 => IsComprehensive ? PackageVersionsComprehensive.ElasticSearch5 : PackageVersionsLatestMinors.ElasticSearch5;

        public static IEnumerable<object[]> Npgsql => IsComprehensive ? PackageVersionsComprehensive.Npgsql : PackageVersionsLatestMinors.Npgsql;

        public static IEnumerable<object[]> SqlClient => IsComprehensive ? PackageVersionsComprehensive.SqlClient : PackageVersionsLatestMinors.SqlClient;

        public static IEnumerable<object[]> StackExchangeRedis => IsComprehensive ? PackageVersionsComprehensive.StackExchangeRedis : PackageVersionsLatestMinors.StackExchangeRedis;

        public static IEnumerable<object[]> ServiceStackRedis => IsComprehensive ? PackageVersionsComprehensive.ServiceStackRedis : PackageVersionsLatestMinors.ServiceStackRedis;

#if NETCOREAPP2_1
        public static IEnumerable<object[]> AspNetCoreMvc2 => IsComprehensive ? PackageVersionsComprehensive.AspNetCoreMvc2 : PackageVersionsLatestMinors.AspNetCoreMvc2;
#endif
            };
#endif

#if NETCOREAPP2_1
        public static IEnumerable<object[]> AmazonSqs =>

            new List<object[]>
            {
#if DEFAULT_SAMPLES
                new object[] { string.Empty },
#else
                new object[] { "3.1.0" },
                new object[] { "3.1.0.1" },
                new object[] { "3.1.0.2" },
                new object[] { "3.1.0.3" },
                new object[] { "3.1.0.4" },
                new object[] { "3.1.0.5" },
                new object[] { "3.1.0.6" },
                new object[] { "3.1.0.7" },
                new object[] { "3.1.0.8" },
                new object[] { "3.1.0.9" },
                new object[] { "3.1.0.10" },
                new object[] { "3.1.0.11" },
                new object[] { "3.1.0.12" },
                new object[] { "3.1.0.13" },
                new object[] { "3.3.0" },
                new object[] { "3.3.0.1" },
                new object[] { "3.3.0.2" },
                new object[] { "3.3.0.3" },
#endif
            };
#endif

    }
}
